const { parsePageContent } = require('../parsePageContent');

describe('все распарсенные коды принадлежат списку codes.txt', () => {
  test('parsed codes subset of codes.txt', () => {
    const allowed = new Set(['1110', '1120', '1130', '1140', '1150', '11501', '11502', '1160', '1170', '11701', '1180', '1190', '1100', '1210', '12101', '12102', '12103', '1220', '12201', '12202', '1230', '12301', '12302', '12303', '12304', '12305', '12306', '1240', '12401', '1250', '12501', '12502', '1260', '12601', '1200', '1600', '1310', '1320', '1340', '1350', '1360', '1370', '1300', '1410', '1420', '1430', '1450', '1400', '1510', '15101', '1520', '15201', '15202', '15203', '15204', '15205', '15206', '15207', '1530', '1540', '1550', '1500', '1700']);
    const rawStrings = [' 0710001.2', '', '', ' 30 ', ' ', ' 31', ' 31', '2024.', '2023.', '2022r.', '', 'III.', ' (,', '1310', ',  )', '210', '210', '210', ' , ', '1320', '', ' ', '-', '-', '1340', '-', '( )', '-', '-', '1350', '372100', '372 100', '372100', '', '1360', '-', '-', '(', '-', ')', '1370', '39 645', '32628', '28623', ' II', '1300', '411 955', '404938', '400933', 'IV.  ', ' ', '1410', '  ', '-', '-', '1420', '-', '-', ' ', '1430', '-', ' ', '-', '1450', ' IV', '-', '-', '1400', '-', 'V.  ', ' ', '1510', '20 000', '943', '  :', '-', ' ', '15101', '20 000', '943', '-', ' ', '1520', '3 557538', '2635 071', '2411 555', '  :', '  ', '15201', '1575 741', '1401 885', '1 139 830', '  ', '15202', '1812979', '1 079 184', '1 123 885', ' ', '15203', '6990', '5272', '1202', '  ', '15204', '', '526', '387', '382', '   ', '15205', '1482', '81', '1158', '  ', '15206', '-', '-', '314', ' ', '15207', '', '159 820', '148 262', '144784', ' ', '1530', '-', '-', ' ', '-', '1540', '-', '-', ' ', '1550', '-', '-', ' V', '1500', '3557 538', '2655 071', '2412498', '5AHC', '1700', '3 969 493', '3 060 009', '2813431', 'F', 'H', '', '', '()', '', '()'];
    
    const { otchetnost, error } = parsePageContent([rawStrings]);
    expect(error).toBeUndefined();
    
    const parsedCodes = new Set(otchetnost.map(r => r.code));
    const outside = Array.from(parsedCodes).filter(c => !allowed.has(c));
    
    if (outside.length > 0) {
      console.error('Найдены коды вне списка codes.txt:', outside);
    }
    
    expect(outside).toEqual([]);
  });
});


