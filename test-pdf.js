const PDFConverter = require('./server/pdf-converter');
const PDFConverterFallback = require('./server/pdf-converter-fallback');
const path = require('path');

async function testPDFConversion() {
  console.log('=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ PDF ===\n');
  
  // –ü—É—Ç—å –∫ —Ç–µ—Å—Ç–æ–≤–æ–º—É PDF —Ñ–∞–π–ª—É (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π)
  const testPdfPath = path.join(__dirname, 'test.pdf');
  const outputDir = path.join(__dirname, 'uploads', 'test-output');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞
  const fs = require('fs-extra');
  if (!await fs.pathExists(testPdfPath)) {
    console.error('‚ùå –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª test.pdf –Ω–µ –Ω–∞–π–¥–µ–Ω!');
    console.log('–ü–æ–º–µ—Å—Ç–∏—Ç–µ PDF —Ñ–∞–π–ª –≤ –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ –∫–∞–∫ test.pdf');
    return;
  }
  
  try {
    console.log('üìÑ PDF —Ñ–∞–π–ª:', testPdfPath);
    console.log('üìÅ –í—ã—Ö–æ–¥–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è:', outputDir);
    console.log('');
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä
    console.log('üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä...');
    const converter = new PDFConverter();
    const results = await converter.convertPDFToImages(testPdfPath, outputDir);
    
    console.log('‚úÖ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
    console.log(`üìä –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ —Å—Ç—Ä–∞–Ω–∏—Ü: ${results.length}`);
    
    results.forEach((result, index) => {
      console.log(`   –°—Ç—Ä–∞–Ω–∏—Ü–∞ ${result.pageNumber}: ${result.path}`);
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä–∞:', error.message);
    
    try {
      console.log('\nüîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º fallback –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä...');
      const fallbackConverter = new PDFConverterFallback();
      const fallbackResults = await fallbackConverter.convertPDFToImages(testPdfPath, outputDir);
      
      console.log('‚úÖ Fallback –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
      console.log(`üìä –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ —Å—Ç—Ä–∞–Ω–∏—Ü: ${fallbackResults.length}`);
      
      fallbackResults.forEach((result, index) => {
        console.log(`   –°—Ç—Ä–∞–Ω–∏—Ü–∞ ${result.pageNumber}: ${result.path}`);
      });
      
    } catch (fallbackError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ fallback –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä–∞:', fallbackError.message);
      console.log('\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
      console.log('1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Poppler Utils');
      console.log('2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ PDF —Ñ–∞–π–ª –Ω–∞ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏—è');
      console.log('3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π PDF —Ñ–∞–π–ª');
    }
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ñ–∞–π–ª –∑–∞–ø—É—â–µ–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  testPDFConversion();
}

module.exports = testPDFConversion; 